{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","isVisible","showList","setState","sortReverse","reverse","sort","by","newGoods","goodA","goodB","localeCompare","length","reset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0PAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAQ,CACNC,MAAOH,EACPI,WAAW,GAHf,EAMEC,SAAW,WACT,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBE,WAAYF,EAAME,eARxB,EAYEG,YAAc,WACZ,EAAKD,UAAS,SAAAJ,GAAK,MAAK,CACtBC,MAAO,YAAID,EAAMC,OAAOK,eAd9B,EAkBEC,KAAO,SAACC,GACN,IAAMC,EAAQ,YAAO,EAAKT,MAAMC,OAehC,OAbAQ,EAASF,MAAK,SAACG,EAAOC,GACpB,OAAQH,GACN,IAAK,OACH,OAAOE,EAAME,cAAcD,GAE7B,IAAK,MACH,OAAOD,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKX,EAAKT,UAAS,SAAAJ,GAAK,kCACdA,GADc,IAEjBC,MAAOQ,QArCf,EA0CEK,MAAQ,WACN,EAAKV,SAAS,CACZH,MAAOH,KA5Cb,4CAgDE,WAAU,IAAD,OACP,EAA6BiB,KAAKf,MAA1BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAEf,OACE,sBAAKc,UAAU,MAAf,UACE,+CACA,wBACEC,KAAK,SACLD,UAAWd,EAAY,UAAY,GACnCgB,QAASH,KAAKZ,SAHhB,mBAQED,GACE,qCACE,wBACEe,KAAK,SACLC,QAASH,KAAKV,YAFhB,qBAMA,wBACEY,KAAK,SACLC,QAAS,kBAAM,EAAKX,KAAK,SAF3B,iCAMA,wBACEU,KAAK,SACLC,QAAS,kBAAM,EAAKX,KAAK,QAF3B,4BAMA,wBACEU,KAAK,SACLC,QAASH,KAAKD,MAFhB,mBAMA,6BACGb,EAAMkB,KAAI,SAAAC,GAAI,OACb,oBAEEJ,UAAU,OAFZ,SAIGI,GAHIA,kBA3FzB,GAAyBC,IAAMC,WClB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.043adbd5.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  isVisible: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    isVisible: false,\n  };\n\n  showList = () => {\n    this.setState(state => ({\n      isVisible: !state.isVisible,\n    }));\n  };\n\n  sortReverse = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  };\n\n  sort = (by: string) => {\n    const newGoods = [...this.state.goods];\n\n    newGoods.sort((goodA, goodB) => {\n      switch (by) {\n        case 'alph':\n          return goodA.localeCompare(goodB);\n\n        case 'len':\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n\n    return (\n      this.setState(state => ({\n        ...state,\n        goods: newGoods,\n      }))\n    );\n  };\n\n  reset = () => {\n    this.setState({\n      goods: goodsFromServer,\n    });\n  };\n\n  render() {\n    const { goods, isVisible } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>List of Goods</h1>\n        <button\n          type=\"button\"\n          className={isVisible ? 'visible' : ''}\n          onClick={this.showList}\n        >\n          Start\n        </button>\n        {\n          isVisible && (\n            <>\n              <button\n                type=\"button\"\n                onClick={this.sortReverse}\n              >\n                Reverse\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => this.sort('alph')}\n              >\n                Sort alphabetically\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => this.sort('len')}\n              >\n                Sort by Length\n              </button>\n              <button\n                type=\"button\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n              <ul>\n                {goods.map(good => (\n                  <li\n                    key={good}\n                    className=\"list\"\n                  >\n                    {good}\n                  </li>\n                ))}\n              </ul>\n            </>\n          )\n        }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}